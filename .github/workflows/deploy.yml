name: Deployment

on:
  push:
    branches:
      - master

permissions:
  contents: read

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    steps:
      - name: Check out the source code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Retrieve tags
        run: git fetch --unshallow --tags

      - name: Setup Node.js environment
        uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v4.0.1
        with:
          node-version: lts/*
          cache: npm

      - name: Install dependencies
        run: npm ci --ignore-scripts
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run postinstall scripts
        run: npm rebuild && npm run prepare --if-present

      - name: Build
        run: npm run build

      - name: Save artifacts
        uses: actions/upload-artifact@1eb3cb2b3e0f29609092a73eb033bb759a334595 # v4
        with:
          path: ./build/
          name: build

      - name: Start deployment
        uses: chrnorm/deployment-action@d42cde7132fcec920de534fffc3be83794335c00 # v2.0.5
        id: deployment
        with:
          token: "${{ github.token }}"
          environment: production

      - name: Deploy
        env:
          DEPLOY_TARGET: ${{ secrets.DEPLOY_TARGET }}
          RSYNC_PASSWORD: ${{ secrets.RSYNC_PASSWORD }}
        run: rsync -avHz --ignore-times build/ $DEPLOY_TARGET

      - name: Update deployment status (success)
        if: success()
        uses: chrnorm/deployment-status@2afb7d27101260f4a764219439564d954d10b5b0 # tag=v2.0.1
        with:
          token: "${{ github.token }}"
          state: "success"
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}

      - name: Update deployment status (failure)
        if: failure()
        uses: chrnorm/deployment-status@2afb7d27101260f4a764219439564d954d10b5b0 # tag=v2.0.1
        with:
          token: "${{ github.token }}"
          state: "failure"
          deployment-id: ${{ steps.deployment.outputs.deployment_id }}
